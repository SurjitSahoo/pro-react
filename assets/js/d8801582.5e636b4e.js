"use strict";(self.webpackChunkpro_react=self.webpackChunkpro_react||[]).push([[87],{2984:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"architecture/single-responsibility-principle","title":"Single Responsibility Principle","description":"Meaning one \\"thing\\" should only concern about doing one thing properly. This \\"one thing\\" can be a React Component, a function or a module, etc.","source":"@site/docs/1.architecture/2.single-responsibility-principle.md","sourceDirName":"1.architecture","slug":"/architecture/single-responsibility-principle","permalink":"/pro-react/docs/architecture/single-responsibility-principle","draft":false,"unlisted":false,"editUrl":"https://github.com/SurjitSahoo/pro-react/edit/main/docs/1.architecture/2.single-responsibility-principle.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Separation of Concerns","permalink":"/pro-react/docs/architecture/separation-of-concerns"},"next":{"title":"How to write a component","permalink":"/pro-react/docs/architecture/how-to-write-a-component"}}');var i=t(4848),s=t(8453);const r={sidebar_position:2},a="Single Responsibility Principle",l={},c=[{value:"Examples",id:"examples",level:3}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"single-responsibility-principle",children:"Single Responsibility Principle"})}),"\n",(0,i.jsx)(n.p,{children:'Meaning one "thing" should only concern about doing one thing properly. This "one thing" can be a React Component, a function or a module, etc.'}),"\n",(0,i.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.p,{children:"If you need a feedback form in a pop-up, the form and the pop-up modal should not be one single component. Both should be independent pieces of code. These should not be tightly coupled with each other."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",metastring:'showLineNumbers title="Bad Design"',children:"function FeedbackPopup() {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const open = () => setIsOpen(true);\n  const close = () => setIsOpen(false);\n\n  if (!isOpen) {\n    return <button onClick={open}>Give Feedback</button>;\n  }\n\n  return (\n    <div>\n      <h2>Feedback</h2>\n      <textarea placeholder='Your feedback here...'></textarea>\n      <button onClick={close}>Close</button>\n    </div>\n  );\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"In this code nothing is re-usable, and its completely resistant to change."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",metastring:'showLineNumbers title="Good Design"',children:"// file: modal.tsx\nfunction Modal({ isOpen = false, close, title = 'Modal Title', children }) {\n  if (isOpen) return null;\n\n  return (\n    <div>\n      <h2>{title}</h2>\n      <main>{children}</main>\n    </div>\n  );\n}\n\n// file: feedbackForm.tsx\nfunction FeedbackForm({ onSubmit, onCancel }) {\n  return (\n    <form>\n      <textarea placeholder='Your feedback here...'></textarea>\n      <button onClick={onCancel}>Close</button>\n    </form>\n  );\n}\n\n// file: feedbackPopup.tsx\nfunction FeedbackPopUp() {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const openModal = () => setIsModalOpen(true);\n  const closeModal = () => setIsModalOpen(false);\n\n  return (\n    <>\n      <button onClick={openModal}>Provide feedback</button>\n      <Modal title='Provide your valuable feedback' isOpen={isModalOpen} close={closeModal}>\n        <FeedbackForm onCancel={closeModal} onSubmit={closeModal} />\n      </Modal>\n    </>\n  );\n}\n\nrender(FeedbackPopUp);\n"})}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:"What is good about this design?"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The modal component doesn't care about anything other than being a modal. It only needs to do one thing properly, that is being a modal, how to properly render the modal, how to close it, the styles for the modal, and so on. The modal will be opened by the parent, but it'll be closed by the modal itself, so it takes a close function as arg."}),"\n",(0,i.jsx)(n.li,{children:"FeedbackForm component only deals with handling the form, cleaning it up and calling the submit function with necessary form input values. This component does not need to know where it will be rendered, whether to open/close the wrapping modal and so on."}),"\n",(0,i.jsx)(n.li,{children:"In order to use this modal component in other use cases, the modal itself should not need to be changed at all."}),"\n",(0,i.jsx)(n.li,{children:"Lastly the feedbackPopUpFeature combines the modal and form components to produce the desired feature.\nYou can even take it one step further and create all the inputs as separate components."}),"\n",(0,i.jsx)(n.li,{children:"Just like the modal and feedbackForm components all the react components should be individually reusable. They should not be tightly coupled at all. So that we can always mix and match multiple components together to produce new features."}),"\n"]}),(0,i.jsx)(t,{children:(0,i.jsxs)(n.p,{children:[(0,i.jsxs)("summary",{children:["While doing the above, ",(0,i.jsx)(n.strong,{children:"do not define nested components"})]}),"\nInside the function components, we have the ability to define more function components, but the problem is, whenever the outer component re-renders, the inner components will be re-defined triggering more-renders of the inner components. We'll discuss more about gotchas while working with function components in a bit"]})})]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"Split the code into small pieces as much as possible, so that each piece becomes independent. Your feature should be simply a configuration file that configures all the pieces of code to work together as per the requirement. If the requirements change, you change the configurations. Not the underlying pieces of code."})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var o=t(6540);const i={},s=o.createContext(i);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);