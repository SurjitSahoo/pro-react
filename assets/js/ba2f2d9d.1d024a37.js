"use strict";(self.webpackChunkpro_react=self.webpackChunkpro_react||[]).push([[5421],{7410:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"misc-styles-and-principles/dont-create-contradicting-states","title":"Don\'t Create Contradicting States","description":"In the above code it\'s easy to create a situation where both isLoading and isError is true and vice versa.","source":"@site/docs/7.misc-styles-and-principles/6.dont-create-contradicting-states.md","sourceDirName":"7.misc-styles-and-principles","slug":"/misc-styles-and-principles/dont-create-contradicting-states","permalink":"/pro-react/docs/misc-styles-and-principles/dont-create-contradicting-states","draft":false,"unlisted":false,"editUrl":"https://github.com/SurjitSahoo/pro-react/edit/main/docs/7.misc-styles-and-principles/6.dont-create-contradicting-states.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Don\'t Store JSX in State","permalink":"/pro-react/docs/misc-styles-and-principles/dont-store-jsx-in-state"},"next":{"title":"Don\'t Create Nested Components","permalink":"/pro-react/docs/misc-styles-and-principles/dont-create-nested-components"}}');var r=n(4848),o=n(8453);const a={sidebar_position:6},i="Don't Create Contradicting States",c={},d=[];function l(t){const e={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"dont-create-contradicting-states",children:"Don't Create Contradicting States"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-jsx",metastring:'showLineNumbers title="Here I forgot to update the error state on success and loading state in error case \ud83d\udca9\ud83e\udde8\ud83d\udca3"',children:"function Blog() {\n    const [isLoading, setIsLoading] = useState(false);\n    const [isError, setIsError] = useState(false);\n\n    const fetchBlog = () {\n        setIsLoading(true);\n        fetch('api')\n          .then(() => setIsLoading(false));\n          .catch(() => setIsError(true));\n    }\n}\n"})}),"\n",(0,r.jsxs)(e.p,{children:["In the above code it's easy to create a situation where both ",(0,r.jsx)(e.code,{children:"isLoading"})," and ",(0,r.jsx)(e.code,{children:"isError"})," is true and vice versa."]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-tsx",metastring:'showLineNumbers title="DO \u2705"',children:'function Blog() {\n    const [status, setStatus] = useState<"loading" | "error" | "fulfilled">();\n\n    const fetchBlog = () {\n        status("loading");\n        fetch(\'api\')\n          .then(() => setStatus("fulfilled"));\n          .catch(() => setStatus("error"));\n    }\n}\n'})})]})}function p(t={}){const{wrapper:e}={...(0,o.R)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(l,{...t})}):l(t)}},8453:(t,e,n)=>{n.d(e,{R:()=>a,x:()=>i});var s=n(6540);const r={},o=s.createContext(r);function a(t){const e=s.useContext(o);return s.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function i(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:a(t.components),s.createElement(o.Provider,{value:e},t.children)}}}]);