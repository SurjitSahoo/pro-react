"use strict";(self.webpackChunkpro_react=self.webpackChunkpro_react||[]).push([[2227],{8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var i=n(6540);const s={},r=i.createContext(s);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:t},e.children)}},9314:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"misc-styles-and-principles/avoid-nested-if-checks","title":"Avoid Nested IF Checks","description":"- Nested if conditions are harder to read, as the reader has to move up and down to see what happens in else, which if case is wrapped under which and so on.","source":"@site/docs/7.misc-styles-and-principles/3.avoid-nested-if-checks.md","sourceDirName":"7.misc-styles-and-principles","slug":"/misc-styles-and-principles/avoid-nested-if-checks","permalink":"/pro-react/docs/misc-styles-and-principles/avoid-nested-if-checks","draft":false,"unlisted":false,"editUrl":"https://github.com/SurjitSahoo/pro-react/edit/main/docs/7.misc-styles-and-principles/3.avoid-nested-if-checks.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Avoid Nested IF Checks"},"sidebar":"tutorialSidebar","previous":{"title":"Avoid Code Duplication","permalink":"/pro-react/docs/misc-styles-and-principles/avoid-code-duplication"},"next":{"title":"No of Lines in A Function","permalink":"/pro-react/docs/misc-styles-and-principles/no-of-lines"}}');var s=n(4848),r=n(8453);const o={sidebar_position:3,title:"Avoid Nested IF Checks"},a="Avoid Nested if Checks",d={},c=[];function h(e){const t={admonition:"admonition",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsxs)(t.h1,{id:"avoid-nested-if-checks",children:["Avoid Nested ",(0,s.jsx)(t.code,{children:"if"})," Checks"]})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx",metastring:'showLineNumbers title="Hard to read - Auth token validation logic  \ud83d\udca9\ud83e\udde8\ud83d\udca3"',children:"if (authModule.initialized) {\n  const authHeader = req.headers['Authentication'];\n  if (authHeader) {\n    const headerParts = authHeader.split(' ');\n    if (headerParts.length === 2) {\n      const token = headerParts[1];\n      if (token !== '') {\n        try {\n          const payload = authModule.validateToken(token);\n          return payload;\n        } catch (err) {\n          return 401;\n        }\n      }\n      return 401;\n    }\n    return 401;\n  }\n  return 401;\n}\nreturn 401;\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx",metastring:'showLineNumbers title="Easy to read - Auth token validation logic  \u2705"',children:"// nothing to do if authModule isn't ready for some reason.\nif (!authModule.initialized) throw new Error('Auth Module is not initialized');\n\nconst authHeader = req.headers['Authentication'];\nif (!authHeader) return 401; // Auth header doesn't exist\n\nconst headerParts = authHeader.split(' ');\nif (headerParts.length !== 2) return 401; // Header value is wrong\n\nconst token = headerParts[1];\nif (token === '') return 401; // Empty token\n\n// now we know token exists\ntry {\n  const payload = authModule.validateToken(token);\n  return payload;\n} catch (err) {\n  return 401;\n}\n"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Nested if conditions are harder to read, as the reader has to move up and down to see what happens in else, which if case is wrapped under which and so on."}),"\n",(0,s.jsx)(t.li,{children:"Most of the time we perform if checks to validate some data before proceeding. E.g. to validate auth token, we have to make sure auth validator is initialized and ready, the authentication header exists, header value is in the correct format and the token does exists, before we can perform the validation of the token."}),"\n",(0,s.jsx)(t.li,{children:"We should always check if the required data exists or is valid before proceeding."}),"\n"]}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsx)(t.p,{children:"Roll out the error conditions first, step by step."})})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}}}]);